#include "Courage/Config/Properties.hpp"
#include <fstream>
#include <sstream>
#include <filesystem>
#include <iostream>

Properties::Properties(const std::string &filename) {
    if (!std::filesystem::exists(filename)) {
        generateDefault(filename);
    }
    load(filename);
}

std::string Properties::get(const std::string &key, const std::string &def) const {
    auto it = values.find(key);
    return (it != values.end()) ? it->second : def;
}

int Properties::getInt(const std::string &key, int def) const {
    auto it = values.find(key);
    return (it != values.end()) ? std::stoi(it->second) : def;
}

void Properties::generateDefault(const std::string &filename) {
    std::ofstream out(filename);
    if (!out) return;

    out << "#Minecraft server properties\n";
    out << "#Generated by Courage server\n";
    out << "motd=A Minecraft Server\n";
    out << "server-port=25565\n";
    out << "max-players=20\n";
    out << "version-name=1.21\n";
    out << "protocol-version=767\n";
    out << "favicon=../courage_favicon.png\n";
    out.close();

    std::cout << "[INFO] Default server.properties generated.\n";
}

void Properties::load(const std::string &filename) {
    std::ifstream in(filename);
    std::string line;
    while (std::getline(in, line)) {
        if (line.empty() || line[0] == '#') continue;
        std::istringstream iss(line);
        std::string key, value;
        if (std::getline(iss, key, '=') && std::getline(iss, value)) {
            values[key] = value;
        }
    }
}
